1) Создать java проект с именем academy (если не создан). 
Правый клик мышкой в окне Package explorer -> New -> Java Project.
Вводим имя проекта (academy) -> Finish
2) Создаем package в src папке с именем by.academy.classwork.lesson1
3) Создаем класс Application в созданом пакете из пункта 2.
Добавим метод:
public static void main(String ...args){

}
Эта точка входа в ваше приложение.

4) Создаем класс Cat в созданом пакете из пункта 2.
4.1) Добавить поле типа int (целочисленное значение) с именем age (возраст).
4.2) Добавить поле типа String (целочисленное значение) с именем nickname (кличка кота).
4.3) Добавить метод, в котором вы будете добавлять один год вашему коту:
pulbic void grow(){
// add code here
}

4.4) Добавить метод, в котором вы будете выводить на консоль "Кот спит":
pulbic void sleep(){
// add code here
}

4.5) Добавить метод, в котором вы будете выводить на консоль "Кот ест":
pulbic void eat(){
// add code here
}

4.5) Добавить метод, в котором вы будете выводить на консоль "Кот гуляет":
pulbic void walk(){
// add code here
}

4.6) Добавить конструктор без параметров:
pulbic Cat(){
// nothing
}

4.7) Добавить конструктор с параметром nickname чтобы назвать кота:
pulbic Cat(String nickname){
// add code here
}

5) В классе Application создать 2 кота, одного без имени, второго с именем.
6) Вызовите методы eat, sleep, walk у кота с именем.
7) Вызовите методы grow у второго кота без имени 3 раза и выведите на экран его возраст.
8) Добавить поле money в класс Cat, добавить методы getMoney и setMoney, которые будут возвращать и сетать значение money соответственно.
9) Добавить поле initials(инициалы), которое будет хранить первую букву клички кота, подумать над типом, написать метод getInitials/setInitials, которые будут возвращать и сетать значение initials соответственно.
10) Добавить поле isHomeAnimal(является ли домашним животным). Подумать над типом, написать метод isHomeAnimal/setIsHomeAnimal, которые будут возвращать и сетать значение isHomeAnimal соответственно.